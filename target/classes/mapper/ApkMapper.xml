<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.firstMaven.dao.ApkMapper">
  <resultMap id="BaseResultMap" type="com.firstMaven.pojo.Apk">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="up_time" jdbcType="TIMESTAMP" property="upTime" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="md5" jdbcType="VARCHAR" property="md5" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="version_name" jdbcType="VARCHAR" property="versionName" />
    <result column="risk_num" jdbcType="INTEGER" property="riskNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, type, user_id, up_time, state, end_time, md5, size, version_name, risk_num
  </sql>
  <select id="selectByExample" parameterType="com.firstMaven.pojo.ApkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.firstMaven.pojo.ApkExample">
    delete from apk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.firstMaven.pojo.Apk">
    insert into apk (id, name, type, 
      user_id, up_time, state, 
      end_time, md5, size, 
      version_name, risk_num)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{upTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, 
      #{endTime,jdbcType=TIMESTAMP}, #{md5,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, 
      #{versionName,jdbcType=VARCHAR}, #{riskNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.firstMaven.pojo.Apk">
    insert into apk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="md5 != null">
        md5,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="versionName != null">
        version_name,
      </if>
      <if test="riskNum != null">
        risk_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null">
        #{md5,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="riskNum != null">
        #{riskNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.firstMaven.pojo.ApkExample" resultType="java.lang.Long">
    select count(*) from apk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update apk
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.upTime != null">
        up_time = #{record.upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.md5 != null">
        md5 = #{record.md5,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.versionName != null">
        version_name = #{record.versionName,jdbcType=VARCHAR},
      </if>
      <if test="record.riskNum != null">
        risk_num = #{record.riskNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update apk
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      up_time = #{record.upTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      md5 = #{record.md5,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      version_name = #{record.versionName,jdbcType=VARCHAR},
      risk_num = #{record.riskNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.firstMaven.pojo.Apk">
    update apk
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5 != null">
        md5 = #{md5,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="versionName != null">
        version_name = #{versionName,jdbcType=VARCHAR},
      </if>
      <if test="riskNum != null">
        risk_num = #{riskNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.firstMaven.pojo.Apk">
    update apk
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      md5 = #{md5,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      version_name = #{versionName,jdbcType=VARCHAR},
      risk_num = #{riskNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>